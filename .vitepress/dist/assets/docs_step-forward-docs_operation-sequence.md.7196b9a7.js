import{_ as s,o as a,c as n,O as l}from"./chunks/framework.dd9db2cc.js";const F=JSON.parse('{"title":"运行时序","description":"","frontmatter":{},"headers":[],"relativePath":"docs/step-forward-docs/operation-sequence.md","filePath":"docs/step-forward-docs/operation-sequence.md"}'),o={name:"docs/step-forward-docs/operation-sequence.md"},t=l(`<h1 id="运行时序" tabindex="-1">运行时序 <a class="header-anchor" href="#运行时序" aria-label="Permalink to &quot;运行时序&quot;">​</a></h1><h2 id="服务启动时的初始化过程" tabindex="-1">服务启动时的初始化过程 <a class="header-anchor" href="#服务启动时的初始化过程" aria-label="Permalink to &quot;服务启动时的初始化过程&quot;">​</a></h2><div class="language-mermaid"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">sequenceDiagram</span></span>
<span class="line"><span style="color:#A6ACCD;">  Springboot</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">spring.factories</span></span>
<span class="line"><span style="color:#A6ACCD;">  NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">getNebulaPoolConfig</span></span>
<span class="line"><span style="color:#A6ACCD;">  NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">getNebulaJdbcProperties</span></span>
<span class="line"><span style="color:#A6ACCD;">  NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">readParseCfgProps</span></span>
<span class="line"><span style="color:#A6ACCD;">  NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">new NgbatisBeanFactoryPostProcessor</span></span>
<span class="line"><span style="color:#A6ACCD;">  NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">load(加载开发者编写的DAO)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">loop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">遍历xml namespace信息</span></span>
<span class="line"><span style="color:#A6ACCD;">      MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">解析出待生成代理类的类模型</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">loop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">解析出待生成代理方法的方法模型</span></span>
<span class="line"><span style="color:#A6ACCD;">          MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">生成当前方法的方法模型</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;font-style:italic;">alt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">是分页方法</span></span>
<span class="line"><span style="color:#A6ACCD;">              MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">生成当前方法对应的Count方法模型</span></span>
<span class="line"><span style="color:#A6ACCD;">              MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">生成当前方法对应的Page方法模型</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#A6ACCD;">  MapperResourceLoader</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">返回用于生成代理类的类模型</span></span>
<span class="line"><span style="color:#A6ACCD;">  NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">DaoResourceLoader</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">loadTpl(加载基类DAO)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">loop</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">          DaoResourceLoader</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">DaoResourceLoader</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">解析基类待动态代理的方法模型</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#A6ACCD;">  DaoResourceLoader</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">返回用于生成基类代理类的类模型</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">loop</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">      NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxyClassGenerator</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">按类模型信息获取字节码</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">loop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">批量加载多个代理类字节码</span></span>
<span class="line"><span style="color:#A6ACCD;">      NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">通过RAMClassLoader加载字节码</span></span>
<span class="line"><span style="color:#A6ACCD;">      NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">NgbatisContextInitialize</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">通过BeanDefinitionRegistry注册 bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  Springboot</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">Springboot</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">扫描并批量注册结果集处理器</span></span></code></pre></div><h2 id="当代理方法被调用时" tabindex="-1">当代理方法被调用时 <a class="header-anchor" href="#当代理方法被调用时" aria-label="Permalink to &quot;当代理方法被调用时&quot;">​</a></h2><div class="language-mermaid"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">sequenceDiagram</span></span>
<span class="line"><span style="color:#A6ACCD;">  XXXDao</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">invoke( 接口名, 方法名, 参数列表 )</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">alt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">不是分页方法</span></span>
<span class="line"><span style="color:#A6ACCD;">      MapperProxy</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">invoke(方法模型, 参数列表)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">是分页方法</span></span>
<span class="line"><span style="color:#A6ACCD;">      MapperProxy</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">获取Count方法模型</span></span>
<span class="line"><span style="color:#A6ACCD;">      MapperProxy</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">invoke(Count方法模型, 参数列表)</span></span>
<span class="line"><span style="color:#A6ACCD;">      MapperProxy</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">获取Page方法模型</span></span>
<span class="line"><span style="color:#A6ACCD;">      MapperProxy</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">invoke(Page方法模型, 参数列表)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#A6ACCD;">  MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">ArgsResolver</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">将参数列表转换成方便获取的 Map 类型</span></span>
<span class="line"><span style="color:#A6ACCD;">  MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">TextResolver</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">模板参数替换</span></span>
<span class="line"><span style="color:#A6ACCD;">  MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">Session</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">executeWithParameter</span></span>
<span class="line"><span style="color:#A6ACCD;">  MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">ResultResolver</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">结果集数据结构转换（ORM）</span></span>
<span class="line"><span style="color:#A6ACCD;">  ResultResolver</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  MapperProxy_invoke</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;">MapperProxy</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  MapperProxy</span><span style="color:#89DDFF;font-style:italic;">-&gt;&gt;</span><span style="color:#A6ACCD;"> XXXDao</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">与 xml 返回值类型对应的结果</span></span></code></pre></div>`,5),p=[t];function e(c,r,i,y,D,C){return a(),n("div",null,p)}const g=s(o,[["render",e]]);export{F as __pageData,g as default};
